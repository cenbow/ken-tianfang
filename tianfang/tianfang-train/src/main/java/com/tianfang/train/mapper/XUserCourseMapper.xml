<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianfang.train.mapper.XUserCourseMapper" >
  <resultMap id="BaseResultMap" type="com.tianfang.train.pojo.UserCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="VARCHAR" />
    <result column="used_time" property="usedTime" jdbcType="INTEGER" />
    <result column="left_time" property="leftTime" jdbcType="INTEGER" />
    <result column="apply_time" property="applyTime" jdbcType="BIGINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="toto_fee" property="totoFee" jdbcType="DECIMAL" />
    <result column="is_payed" property="isPayed" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="deposit_ispayed" property="depositIspayed" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="cname" property="cname" jdbcType="VARCHAR" />
    <result column="space_name" property="spaceName" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="utype" property="utype" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    id, user_id, course_id, class_id, used_time, left_time, apply_time, description, 
    toto_fee, is_payed, create_time, update_time, deposit_ispayed, mobile, course_name, 
    pname, cname, space_name, order_no, trade_no, status, start_time, end_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tianfang.train.pojo.UserCourseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from training_user_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from training_user_course
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    delete from training_user_course
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tianfang.train.pojo.UserCourseExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    delete from training_user_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tianfang.train.pojo.UserCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    insert into training_user_course (id, user_id, course_id, 
      class_id, used_time, left_time, 
      apply_time, description, toto_fee, 
      is_payed, create_time, update_time, 
      deposit_ispayed, mobile, course_name, 
      pname, cname, space_name, 
      order_no, trade_no, status, 
      start_time, end_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{usedTime,jdbcType=INTEGER}, #{leftTime,jdbcType=INTEGER}, 
      #{applyTime,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{totoFee,jdbcType=DECIMAL}, 
      #{isPayed,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{depositIspayed,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{pname,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{spaceName,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tianfang.train.pojo.UserCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    insert into training_user_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="usedTime != null" >
        used_time,
      </if>
      <if test="leftTime != null" >
        left_time,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="totoFee != null" >
        toto_fee,
      </if>
      <if test="isPayed != null" >
        is_payed,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="depositIspayed != null" >
        deposit_ispayed,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="cname != null" >
        cname,
      </if>
      <if test="spaceName != null" >
        space_name,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="tradeNo != null" >
        trade_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="usedTime != null" >
        #{usedTime,jdbcType=INTEGER},
      </if>
      <if test="leftTime != null" >
        #{leftTime,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="totoFee != null" >
        #{totoFee,jdbcType=DECIMAL},
      </if>
      <if test="isPayed != null" >
        #{isPayed,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="depositIspayed != null" >
        #{depositIspayed,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="cname != null" >
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="spaceName != null" >
        #{spaceName,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tianfang.train.pojo.UserCourseExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    select count(*) from training_user_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    update training_user_course
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.usedTime != null" >
        used_time = #{record.usedTime,jdbcType=INTEGER},
      </if>
      <if test="record.leftTime != null" >
        left_time = #{record.leftTime,jdbcType=INTEGER},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=BIGINT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.totoFee != null" >
        toto_fee = #{record.totoFee,jdbcType=DECIMAL},
      </if>
      <if test="record.isPayed != null" >
        is_payed = #{record.isPayed,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.depositIspayed != null" >
        deposit_ispayed = #{record.depositIspayed,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null" >
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null" >
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.spaceName != null" >
        space_name = #{record.spaceName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null" >
        trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    update training_user_course
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      used_time = #{record.usedTime,jdbcType=INTEGER},
      left_time = #{record.leftTime,jdbcType=INTEGER},
      apply_time = #{record.applyTime,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      toto_fee = #{record.totoFee,jdbcType=DECIMAL},
      is_payed = #{record.isPayed,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      deposit_ispayed = #{record.depositIspayed,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      pname = #{record.pname,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      space_name = #{record.spaceName,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianfang.train.pojo.UserCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    update training_user_course
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="usedTime != null" >
        used_time = #{usedTime,jdbcType=INTEGER},
      </if>
      <if test="leftTime != null" >
        left_time = #{leftTime,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="totoFee != null" >
        toto_fee = #{totoFee,jdbcType=DECIMAL},
      </if>
      <if test="isPayed != null" >
        is_payed = #{isPayed,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="depositIspayed != null" >
        deposit_ispayed = #{depositIspayed,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="cname != null" >
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="spaceName != null" >
        space_name = #{spaceName,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null" >
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianfang.train.pojo.UserCourse" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 02 13:25:43 CST 2015.
    -->
    update training_user_course
    set user_id = #{userId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      used_time = #{usedTime,jdbcType=INTEGER},
      left_time = #{leftTime,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      toto_fee = #{totoFee,jdbcType=DECIMAL},
      is_payed = #{isPayed,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      deposit_ispayed = #{depositIspayed,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      pname = #{pname,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      space_name = #{spaceName,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
    <insert id="applyCourse"  parameterType="com.tianfang.train.dto.UserCourseDto" useGeneratedKeys="true" keyProperty="id" >
 
    insert into training_user_course (id, user_id,open_id, course_id, 
      class_id, used_time, left_time, 
      apply_time, description, toto_fee, 
      is_payed, create_time, update_time, 
      deposit_ispayed, mobile, course_name, 
      pname, cname, space_name, 
      order_no, trade_no, status, 
      start_time, end_time,utype,space_id,day_of_week)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},#{openId,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{usedTime,jdbcType=INTEGER}, #{leftTime,jdbcType=INTEGER}, 
      #{applyTime,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{totoFee,jdbcType=DECIMAL}, 
      #{isPayed,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{depositIspayed,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{pname,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{spaceName,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{utype,jdbcType=INTEGER},#{spaceId,jdbcType=INTEGER},#{day_of_week,jdbcType=VARCHAR})
<!--          <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">   -->
<!--           SELECT LAST_INSERT_ID() -->
<!--     </selectKey>  -->
  </insert>
  
  <update id="updateUsedTime" parameterType="java.lang.Integer">
  	update training_user_course set used_time = used_time + 1,left_time=left_time - 1,update_time = unix_timestamp(now()) where class_id = #{classId}
  </update>
  
  <select id="findMineCollegeByOpenId" parameterType="java.lang.String" resultType="com.tianfang.train.dto.MineCollegeDto">
	select course.*, ifnull(cc.leaveTime,0) as leaveTime, ifnull(cc.truantTime,0) as truantTime from(
	select a.course_id as courseId, cls.address_id as addressId, b.description AS description,a.class_id as classId, a.id as orderId, b.name as courseName, a.left_time as leftTime, a.used_time as usedTime from training_user_course as a left join training_course as b on a.course_id = b.id 
	left join training_course_class as cls on a.class_id = cls.id 
	where a.open_id=#{openId} and a.status =1 and a.is_payed = 1
	order by a.create_time desc
	)as course left join
	(select order_id,
	count(case when type = 1 then id end ) as leaveTime,
	count(case when type = 2 then id end ) as truantTime
	from training_user_course_day group by order_id
	) as cc on cc.order_id = course.orderId
  </select>
  
   <select id="findPageMineCollegeByOpenId" parameterType="map" resultType="com.tianfang.train.dto.MineCollegeDto">
	select course.*, ifnull(cc.leaveTime,0) as leaveTime, ifnull(cc.truantTime,0) as truantTime from(
	select a.course_id as courseId, cls.address_id as addressId, b.description AS description,a.class_id as classId, a.id as orderId, b.name as courseName, a.left_time as leftTime, a.used_time as usedTime from training_user_course as a left join training_course as b on a.course_id = b.id 
	left join training_course_class as cls on a.class_id = cls.id 
	where a.open_id=#{openId} and a.status =1 and a.is_payed = 1
	order by a.create_time desc limit #{start},#{count}
	)as course left join
	(select order_id,
	count(case when type = 1 then id end ) as leaveTime,
	count(case when type = 2 then id end ) as truantTime
	from training_user_course_day group by order_id
	) as cc on cc.order_id = course.orderId
  </select>
  
  <select id="countMineCollegeByOpenId" parameterType="java.lang.String" resultType="java.lang.Integer">
	select count(*) from training_user_course where open_id = #{openId} and status = 1 and is_payed = 1
  </select>
  
  <select id="findMineCollegeByUserId" parameterType="java.lang.String" resultType="com.tianfang.train.dto.MineCollegeDto">
	select course.*, ifnull(cc.leaveTime,0) as leaveTime, ifnull(cc.truantTime,0) as truantTime from(
	select a.course_id as courseId, a.class_id as classId, a.id as orderId, b.name as courseName, a.left_time as leftTime, a.used_time as usedTime from training_user_course as a left join training_course as b on a.course_id = b.id 
	where a.user_id=#{userId} and a.status =1 and a.is_payed = 1
	order by a.create_time desc
	)as course left join
	(select order_id,
	count(case when type = 1 then id end ) as leaveTime,
	count(case when type = 2 then id end ) as truantTime
	from training_user_course_day group by order_id
	) as cc on cc.order_id = course.orderId
  </select>
  
    <select id="findUserOpenClassInfo" parameterType="java.lang.Integer" resultType="com.tianfang.train.dto.OpenClassUserCourseDto">
		    select uc.id,uc.open_id openid,uc.pname,uc.cname,uc.mobile,uc.space_name spaceName,uc.order_no orderno,uc.course_name  courseName, uc.toto_fee totofee,uc.deposit_ispayed depositIspayed,cc.open_date openDate,td.start_time openTime,td.day_of_week,uc.apply_time applyTime ,ifnull(cc.discount,1) discount,ifnull(cc.notice,'') notice, ifnull(cc.deposit,0.00) deposit 
    from training_user_course uc,training_course_class cc,training_time_district td
    where uc.class_id=cc.id and cc.time_district_id=td.id and uc.id = #{id,jdbcType=VARCHAR} 
  </select>
  
      <select id="findUserOpenClassInfoByOrderNo" parameterType="java.lang.Integer" resultType="com.tianfang.train.dto.OpenClassUserCourseDto">
		    select uc.id,uc.open_id openid,uc.pname,uc.cname,uc.mobile,uc.space_name spaceName,uc.order_no orderno,uc.course_name  courseName, uc.toto_fee totofee,uc.deposit_ispayed depositIspayed,cc.open_date openDate,td.start_time openTime,td.day_of_week,uc.apply_time applyTime ,ifnull(cc.discount,1) discount,ifnull(cc.notice,'') notice, ifnull(cc.deposit,0.00) deposit 
    from training_user_course uc,training_course_class cc,training_time_district td
    where uc.class_id=cc.id and cc.time_district_id=td.id and uc.order_no = #{orderno,jdbcType=VARCHAR} 
  </select>
      <select id="getUserCourseClassInfoByOrderNo" parameterType="java.lang.String" resultType="com.tianfang.train.dto.UserCourseDto">
		    select uc.id,c.isneed_cname isneedCname, uc.open_id openid,uc.pname,uc.cname,uc.mobile,uc.space_name spaceName,uc.order_no orderno,uc.course_name  courseName, uc.toto_fee totofee,uc.deposit_ispayed depositIspayed,cc.open_date openDate,td.start_time openTime,td.day_of_week,uc.apply_time applyTime ,ifnull(cc.discount,1) discount,ifnull(cc.notice,'') notice,ifnull(cc.deposit,0.00) deposit   
    from training_course c, training_user_course uc,training_course_class cc,training_time_district td
    where c.id=uc.course_id and c.id=cc.course_id and  uc.class_id=cc.id and cc.time_district_id=td.id and uc.order_no = #{orderno,jdbcType=VARCHAR} 
  </select>
  
  <select id="getUserCourseClassInfoById" parameterType="java.lang.Integer" resultType="com.tianfang.train.dto.UserCourseDto">
		    select uc.id,c.isneed_cname isneedCname, uc.open_id openid,uc.pname,uc.cname,uc.mobile,uc.space_name spaceName,uc.order_no orderno,uc.course_name  courseName, uc.toto_fee totofee,uc.deposit_ispayed depositIspayed,cc.open_date openDate,td.start_time openTime,td.day_of_week,uc.apply_time applyTime ,ifnull(cc.discount,1) discount,ifnull(cc.notice,'') notice,ifnull(cc.deposit,0.00) deposit   
    from training_course c, training_user_course uc,training_course_class cc,training_time_district td
    where c.id=uc.course_id and c.id=cc.course_id and  uc.class_id=cc.id and cc.time_district_id=td.id and uc.id = #{id,jdbcType=VARCHAR} 
  </select>
    <select id="findCourseMessage" parameterType="map" resultType="com.tianfang.train.dto.UserCourseMessageDto">	
      select uc.id,uc.user_id,uc.course_name,uc.deposit_ispayed,uc.is_payed,date_format(FROM_UNIXTIME(uc.apply_time),'%Y-%m-%d %H:%i:%s') apply_time,date_format(FROM_UNIXTIME(uc.update_time),'%Y-%m-%d %H:%i:%s') update_time,uc.order_no,uc.start_time open_time,date_format(FROM_UNIXTIME(cc.open_date),'%Y-%m-%d %H:%i:%s') open_date,uc.description
    from training_user_course uc,training_course_class cc  
    where  uc.class_id=cc.id and uc.user_id =#{user_id,jdbcType=VARCHAR}  and uc.status =1 order by apply_time desc limit #{startNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER} 
  </select>
  <select id="findUserOpenClassInfoPageByOrderNo" parameterType="java.lang.Integer" resultType="com.tianfang.train.dto.OpenClassUserCourseForPageDto">
	select uc.id,uc.open_id openid,uc.pname,uc.cname,uc.mobile,uc.space_name spaceName,uc.order_no orderno,uc.course_name  courseName, uc.toto_fee totofee,uc.deposit_ispayed depositIspayed,cc.open_date openDate,td.start_time openTime,td.day_of_week,uc.apply_time applyTime ,ifnull(cc.discount,1) discount,ifnull(cc.notice,'') notice, ifnull(cc.deposit,0.00) deposit,ds.name district,ad.address,FROM_UNIXTIME(c.start_time,'%Y-%m-%d') course_starttime,FROM_UNIXTIME(c.end_time,'%Y-%m-%d') course_endtime,uc.start_time class_starttime,uc.end_time class_endtime
    from training_user_course uc,training_course_class cc,training_time_district td,training_address ad,training_district ds,training_course c
    where uc.class_id=cc.id and cc.time_district_id=td.id and c.id=cc.course_id and ds.id=ad.district_id and uc.space_id=ad.id and uc.order_no = #{orderno,jdbcType=VARCHAR} 
  </select>
  
</mapper>